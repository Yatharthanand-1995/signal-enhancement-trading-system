version: '3.8'

services:
  # Service Discovery
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Data Service
  data-service:
    build:
      context: ./services/data-service
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - ENVIRONMENT=testing
      - PORT=8001
      - REDIS_URL=redis://redis:6379/0
      - DATABASE_URL=sqlite:///data/test.db
      - LOG_LEVEL=DEBUG
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - ./data:/data

  # Gateway Service
  gateway-service:
    build:
      context: ./services/gateway-service
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=testing
      - PORT=8000
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET_KEY=test-secret-key-for-testing-only
      - DATA_SERVICE_URL=http://data-service:8001
      - ALLOWED_ORIGINS=*
    depends_on:
      redis:
        condition: service_healthy
      data-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Signal Service (placeholder for testing)
  signal-service:
    build:
      context: ./services/signal-service
      dockerfile: Dockerfile
    ports:
      - "8002:8002"
    environment:
      - ENVIRONMENT=testing
      - PORT=8002
      - REDIS_URL=redis://redis:6379/0
      - DATA_SERVICE_URL=http://data-service:8001
    depends_on:
      redis:
        condition: service_healthy
      data-service:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  default:
    driver: bridge

volumes:
  data:
    driver: local